@{
    Layout = null; // Assuming no layout is needed
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Student Performance Analysis Dashboard Engine</title>

    <!-- Custom fonts for this template -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">

    <!-- Custom styles for this template -->
    <link href="~/css/sb-admin-2.min.css" rel="stylesheet">

    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body id="page-top">
    <div id="wrapper">
        <!-- Sidebar omitted for brevity -->
        <ul class="navbar-nav bg-gradient-primary sidebar sidebar-dark accordion" id="accordionSidebar">
            <li class="sidebar-brand">
                <a class="nav-link" href="#">
                    <img src="~/img/favicon.ico" alt="Icon" width="30" height="30" style="margin-right: 10px;">
                    <div class="sidebar-brand-text mx-3">SPADE</div>
                </a>
            </li>
            <hr class="sidebar-divider my-0">
            <li class="nav-item active">
                <a class="nav-link" href="@Url.Action("Index", "Home")">
                    <i class="fas fa-fw fa-tachometer-alt"></i>
                    <span>Home Page</span>
                </a>
            </li>
            <hr class="sidebar-divider">
            <li class="nav-item active">
                <a class="nav-link" href="@Url.Action("Index", "Create")">
                    <i class="fas fa-fw fa-tachometer-alt"></i>
                    <span>Assessments/Grades</span>
                </a>
            </li>
            <hr class="sidebar-divider">
            <li class="nav-item active">
                <a class="nav-link" href="@Url.Action("Index", "Blog")">
                    <i class="fas fa-fw fa-tachometer-alt"></i>
                    <span>Performance Trends</span>
                </a>
            </li>
            <hr class="sidebar-divider">
            <li class="nav-item active">
                <a class="nav-link" href="@Url.Action("Index", "Data")">
                    <i class="fas fa-fw fa-tachometer-alt"></i>
                    <span>About Page</span>
                </a>
            </li>
            <hr class="sidebar-divider">
            <div class="text-center d-none d-md-inline">
                <button class="rounded-circle border-0" id="sidebarToggle"></button>
            </div>
        </ul>
                <div id="content-wrapper" class="d-flex flex-column">
            <div id="content">
                <div class="container-fluid">
                    <!-- Page Heading -->
                    <h1 class="h3 mb-2 text-gray-800">Performance Stats</h1>

                    <!-- Content Row -->


                    <!-- Course Selection Dropdown -->
                    <div class="mb-4">
                        <label for="courseSelect">Select Course:</label>
                        <select id="courseSelect" class="form-control">
                            <option value="course1">Math</option>
                            <option value="course2">DIS</option>
                            <option value="course3">Chemistry</option>
                        </select>
                    </div>
                </div>




                <div class="col-lg-12 mb-4">
                    <!-- Student Performance Scatter Plot -->
                    <div class="card shadow">
                        <div class="card-header py-3">
                            <h6 class="m-0 font-weight-bold text-primary">Grade Ranges</h6>
                        </div>
                        <div class="card-body">
                            <canvas id="gradeRangesChart" style="height: 300px;"></canvas>
                        </div>
                    </div>
                </div>

                <div class="col-lg-4 mb-12">
                    <!-- Student Performance Scatter Plot -->
                    <div class="card shadow mx-auto">
                        <div class="card-header py-3">
                            <h6 class="m-0 font-weight-bold text-primary">Pass/Fail</h6>
                        </div>
                        <div class="card-body">
                            <canvas id="passFailChart" style="height: 30px; width: 100%;"></canvas>
                        </div>
                    </div>
                </div>




                <div class="col-lg-12 mb-4">
                    <!-- Student Performance Scatter Plot -->
                    <div class="card shadow">
                        <div class="card-header py-3">
                            <h6 class="m-0 font-weight-bold text-primary">Student Performance</h6>
                        </div>
                        <div class="card-body">
                            <canvas id="studentPerformanceChart" style="height: 300px;"></canvas>
                        </div>
                    </div>
                </div>


            </div>

        </div>
    </div>

    <!-- Custom scripts for all pages -->
    <script src="~/js/sb-admin-2.min.js"></script>

    <!-- Chart Initialization and Data -->
    <script>
    // Dummy data for pass and fail counts
    const passFailData = {
        labels: ['Pass', 'Fail'],
        datasets: [{
            data: [70, 30], // Sample data (number of students who passed and failed)
            backgroundColor: ['#00b894', '#ff6b6b']
        }]
    };

    // Dummy data for grade ranges bar chart
    const gradeRangesData = {
        labels: ['0-60', '61-70', '71-80', '81-90', '91-100'],
        datasets: [{
            label: 'Grade Range',
            backgroundColor: ['#ff6b6b', '#f9ca24', '#00b894', '#0984e3', '#6c5ce7'],
            data: [10, 20, 30, 25, 15] // Sample data (number of students in each range)
        }]
    };

    // Dummy data for student performance scatter plot
    const studentPerformanceData = {
        course1: [
            { x: 60, y: 70 },
            { x: 75, y: 85 },
            { x: 50, y: 60 },
            // Add more data points for course 1
        ],
        course2: [
            { x: 80, y: 90 },
            { x: 65, y: 75 },
            { x: 70, y: 80 },
            // Add more data points for course 2
        ],
        course3: [
            { x: 55, y: 65 },
            { x: 90, y: 95 },
            { x: 40, y: 50 },
            // Add more data points for course 3
        ]
    };

    document.addEventListener('DOMContentLoaded', function () {
        const passFailChart = new Chart(document.getElementById('passFailChart'), {
            type: 'pie',
            data: passFailData,
            options: {
                legend: {
                    position: 'right'
                }
            }
        });

        const gradeRangesChart = new Chart(document.getElementById('gradeRangesChart'), {
            type: 'bar',
            data: gradeRangesData,
            options: {
                legend: { display: false },
                scales: {
                    xAxes: [{ gridLines: { display: false } }],
                    yAxes: [{ ticks: { beginAtZero: true } }]
                }
            }
        });

        const studentPerformanceChart = new Chart(document.getElementById('studentPerformanceChart'), {
            type: 'scatter',
            data: {
                datasets: [{
                    label: 'Student Performance',
                    borderColor: '#4e73df',
                    backgroundColor: '#4e73df',
                    data: studentPerformanceData.course1 // Default data for initial course
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    x: {
                        type: 'linear',
                        position: 'bottom'
                    }
                }
            }
        });

        // Update all charts based on course selection
        document.getElementById('courseSelect').addEventListener('change', function () {
            const selectedCourse = this.value;
            passFailChart.data.datasets[0].data = passFailData[selectedCourse];
            passFailChart.update();

            gradeRangesChart.data.datasets[0].data = gradeRangesData[selectedCourse];
            gradeRangesChart.update();

            studentPerformanceChart.data.datasets[0].data = studentPerformanceData[selectedCourse];
            studentPerformanceChart.update();
        });
    });
</script>

</body>
</html>
